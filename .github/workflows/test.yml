name: PostgreSQL
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres_db
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres_user
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}:latest
          outputs: type=docker,dest=/tmp/${{ env.IMAGE_NAME }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp/${{ env.IMAGE_NAME }}.tar

    #   - name: Checkout
    #     uses: actions/checkout@v3
    #   - name: Cache Docker layers
    #     uses: actions/cache@v2
    #     with:
    #       path: /tmp/.buildx-cache
    #       key: ${{ runner.os }}-buildx-${{ github.sha }}
    #       restore-keys: |
    #         ${{ runner.os }}-buildx-${{ github.sha }}
    #   - name: Build container image
    #     run: docker build -t $GITHUB_REPOSITORY:latest .

    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v2


    # - name: Build docker images
    #   run: docker-compose build

    # - name: Run tests
    #   run: docker-compose run test
    #   - name: run docker container
    #     uses: ./
    #     id: server
    #     env:
    #       DATABASE_URL: postgres://postgres_user:postgres_password@postgres:5432/postgres_db

    #   # - name: Install PostgreSQL client
    #   #   run: |
    #   #     apt-get update
    #   #     apt-get install --yes postgresql-client
    #   # - name: Query database
    #   #   run: psql -h postgres -d postgres_db -U postgres_user -c 'SELECT 1;'
    #   #   env:
    #   #     PGPASSWORD: postgres_password